"""
This type stub file was generated by pyright.
"""

from collections import OrderedDict
from collections.abc import MutableMapping

class ReturnDict(OrderedDict):
    """
    Return object from `serializer.data` for the `Serializer` class.
    Includes a backlink to the serializer instance for renderers
    to use if they need richer field information.
    """
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    def copy(self): # -> ReturnDict:
        ...
    
    def __repr__(self): # -> str:
        ...
    
    def __reduce__(self): # -> tuple[Type[dict[Unknown, Unknown]], tuple[dict[Unknown, Unknown]]]:
        ...
    


class ReturnList(list):
    """
    Return object from `serializer.data` for the `SerializerList` class.
    Includes a backlink to the serializer instance for renderers
    to use if they need richer field information.
    """
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    
    def __reduce__(self): # -> tuple[Type[list[Unknown]], tuple[list[Unknown]]]:
        ...
    


class BoundField:
    """
    A field object that also includes `.value` and `.error` properties.
    Returned when iterating over a serializer instance,
    providing an API similar to Django forms and form fields.
    """
    def __init__(self, field, value, errors, prefix=...) -> None:
        ...
    
    def __getattr__(self, attr_name): # -> Any:
        ...
    
    def __repr__(self): # -> str:
        ...
    
    def as_form_field(self): # -> Self@BoundField:
        ...
    


class JSONBoundField(BoundField):
    def as_form_field(self): # -> Self@JSONBoundField:
        ...
    


class NestedBoundField(BoundField):
    """
    This `BoundField` additionally implements __iter__ and __getitem__
    in order to support nested bound fields. This class is the type of
    `BoundField` that is used for serializer fields.
    """
    def __init__(self, field, value, errors, prefix=...) -> None:
        ...
    
    def __iter__(self): # -> Generator[NestedBoundField | JSONBoundField | BoundField, None, None]:
        ...
    
    def __getitem__(self, key): # -> NestedBoundField | JSONBoundField | BoundField:
        ...
    
    def as_form_field(self): # -> Self@NestedBoundField:
        ...
    


class BindingDict(MutableMapping):
    """
    This dict-like object is used to store fields on a serializer.

    This ensures that whenever fields are added to the serializer we call
    `field.bind()` so that the `field_name` and `parent` attributes
    can be set correctly.
    """
    def __init__(self, serializer) -> None:
        ...
    
    def __setitem__(self, key, field): # -> None:
        ...
    
    def __getitem__(self, key):
        ...
    
    def __delitem__(self, key): # -> None:
        ...
    
    def __iter__(self): # -> Iterator[Unknown]:
        ...
    
    def __len__(self): # -> int:
        ...
    
    def __repr__(self): # -> str:
        ...
    


