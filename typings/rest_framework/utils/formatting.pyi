"""
This type stub file was generated by pyright.
"""

"""
Utility functions to return a formatted name and description for a given view.
"""
def remove_trailing_string(content, trailing):
    """
    Strip trailing component `trailing` from `content` if it exists.
    Used when generating names from view classes.
    """
    ...

def dedent(content): # -> str:
    """
    Remove leading indent from a block of text.
    Used when generating descriptions from docstrings.

    Note that python's `textwrap.dedent` doesn't quite cut it,
    as it fails to dedent multiline docstrings that include
    unindented text on the initial line.
    """
    ...

def camelcase_to_spaces(content): # -> str:
    """
    Translate 'CamelCaseNames' to 'Camel Case Names'.
    Used when generating names from view classes.
    """
    ...

def markup_description(description): # -> SafeText:
    """
    Apply HTML markup to the given description.
    """
    ...

class lazy_format:
    """
    Delay formatting until it's actually needed.

    Useful when the format string or one of the arguments is lazy.

    Not using Django's lazy because it is too slow.
    """
    __slots__ = ...
    def __init__(self, format_string, *args, **kwargs) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    
    def __mod__(self, value):
        ...
    


