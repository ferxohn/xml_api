"""
This type stub file was generated by pyright.
"""

"""
Handling of media types, as found in HTTP Content-Type and Accept headers.

See https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.7
"""
def media_type_matches(lhs, rhs): # -> bool:
    """
    Returns ``True`` if the media type in the first argument <= the
    media type in the second argument.  The media types are strings
    as described by the HTTP spec.

    Valid media type strings include:

    'application/json; indent=4'
    'application/json'
    'text/*'
    '*/*'
    """
    ...

def order_by_precedence(media_type_lst): # -> list[set[Unknown]]:
    """
    Returns a list of sets of media type strings, ordered by precedence.
    Precedence is determined by how specific a media type is:

    3. 'type/subtype; param=val'
    2. 'type/subtype'
    1. 'type/*'
    0. '*/*'
    """
    ...

class _MediaType:
    def __init__(self, media_type_str) -> None:
        ...
    
    def match(self, other):
        """Return true if this MediaType satisfies the given MediaType."""
        ...
    
    @property
    def precedence(self): # -> Literal[0, 1, 2, 3]:
        """
        Return a precedence level from 0-3 for the media type given how specific it is.
        """
        ...
    
    def __str__(self) -> str:
        ...
    


