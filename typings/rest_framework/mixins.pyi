"""
This type stub file was generated by pyright.
"""

"""
Basic building blocks for generic class based views.

We don't bind behaviour to http method handlers yet,
which allows mixin classes to be composed in interesting ways.
"""
class CreateModelMixin:
    """
    Create a model instance.
    """
    def create(self, request, *args, **kwargs): # -> Response:
        ...
    
    def perform_create(self, serializer): # -> None:
        ...
    
    def get_success_headers(self, data): # -> dict[str, str]:
        ...
    


class ListModelMixin:
    """
    List a queryset.
    """
    def list(self, request, *args, **kwargs): # -> Response:
        ...
    


class RetrieveModelMixin:
    """
    Retrieve a model instance.
    """
    def retrieve(self, request, *args, **kwargs): # -> Response:
        ...
    


class UpdateModelMixin:
    """
    Update a model instance.
    """
    def update(self, request, *args, **kwargs): # -> Response:
        ...
    
    def perform_update(self, serializer): # -> None:
        ...
    
    def partial_update(self, request, *args, **kwargs): # -> Response:
        ...
    


class DestroyModelMixin:
    """
    Destroy a model instance.
    """
    def destroy(self, request, *args, **kwargs): # -> Response:
        ...
    
    def perform_destroy(self, instance): # -> None:
        ...
    


